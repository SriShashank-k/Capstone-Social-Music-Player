{"ast":null,"code":"import axios from 'axios';\n\n// 🔐 Handles 401 errors globally and redirects to login\nconst handleSpotifyError = error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    console.warn(\"⛔ Spotify token invalid — clearing session and redirecting to login.\");\n    localStorage.clear();\n    window.location.href = \"/\"; // You could use loginUrl if preferred\n  }\n  throw error;\n};\n\n// 🎵 Get current user's playlists\nexport const getUserPlaylists = token => {\n  return axios.get('https://api.spotify.com/v1/me/playlists', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).catch(handleSpotifyError);\n};\n\n// 📀 Get tracks for a playlist by ID\nexport const getTracksByPlaylistId = (token, playlistId) => {\n  return axios.get(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).catch(handleSpotifyError);\n};","map":{"version":3,"names":["axios","handleSpotifyError","error","_error$response","response","status","console","warn","localStorage","clear","window","location","href","getUserPlaylists","token","get","headers","Authorization","catch","getTracksByPlaylistId","playlistId"],"sources":["/Users/shashank/Downloads/music-player-app-fixed-working/src/utils/spotify.js"],"sourcesContent":["import axios from 'axios';\n\n// 🔐 Handles 401 errors globally and redirects to login\nconst handleSpotifyError = (error) => {\n  if (error.response?.status === 401) {\n    console.warn(\"⛔ Spotify token invalid — clearing session and redirecting to login.\");\n    localStorage.clear();\n    window.location.href = \"/\"; // You could use loginUrl if preferred\n  }\n  throw error;\n};\n\n// 🎵 Get current user's playlists\nexport const getUserPlaylists = (token) => {\n  return axios\n    .get('https://api.spotify.com/v1/me/playlists', {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .catch(handleSpotifyError);\n};\n\n// 📀 Get tracks for a playlist by ID\nexport const getTracksByPlaylistId = (token, playlistId) => {\n  return axios\n    .get(`https://api.spotify.com/v1/playlists/${playlistId}/tracks`, {\n      headers: {\n        Authorization: `Bearer ${token}`,\n      },\n    })\n    .catch(handleSpotifyError);\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAA,IAAAC,eAAA;EACpC,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACE,QAAQ,cAAAD,eAAA,uBAAdA,eAAA,CAAgBE,MAAM,MAAK,GAAG,EAAE;IAClCC,OAAO,CAACC,IAAI,CAAC,sEAAsE,CAAC;IACpFC,YAAY,CAACC,KAAK,CAAC,CAAC;IACpBC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;EAC9B;EACA,MAAMV,KAAK;AACb,CAAC;;AAED;AACA,OAAO,MAAMW,gBAAgB,GAAIC,KAAK,IAAK;EACzC,OAAOd,KAAK,CACTe,GAAG,CAAC,yCAAyC,EAAE;IAC9CC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC,CAAC,CACDI,KAAK,CAACjB,kBAAkB,CAAC;AAC9B,CAAC;;AAED;AACA,OAAO,MAAMkB,qBAAqB,GAAGA,CAACL,KAAK,EAAEM,UAAU,KAAK;EAC1D,OAAOpB,KAAK,CACTe,GAAG,CAAC,wCAAwCK,UAAU,SAAS,EAAE;IAChEJ,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC,CAAC,CACDI,KAAK,CAACjB,kBAAkB,CAAC;AAC9B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}