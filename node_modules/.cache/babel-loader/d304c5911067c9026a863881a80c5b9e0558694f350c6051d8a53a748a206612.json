{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/music-player-app-fixed-working/src/components/ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = ({\n  songId\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    if (!songId) return;\n    const q = query(collection(db, 'comments', songId, 'messages'), orderBy('timestamp', 'asc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      setComments(snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      })));\n    });\n    return () => unsubscribe();\n  }, [songId]);\n  const sendComment = async () => {\n    if (!message.trim()) return;\n    const displayName = localStorage.getItem(\"spotify_display_name\") || \"Anonymous\";\n    await addDoc(collection(db, 'comments', songId, 'messages'), {\n      text: message,\n      user: displayName,\n      timestamp: serverTimestamp()\n    });\n    setMessage('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 text-white p-4 rounded mt-4 max-h-60 overflow-y-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-2\",\n      children: \"\\uD83D\\uDCAC Chat for this Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-1 text-sm mb-3\",\n      children: comments.map((c, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-700 px-2 py-1 rounded\",\n        children: c.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-grow p-2 rounded bg-gray-900 text-white\",\n        placeholder: \"Write a comment...\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendComment,\n        className: \"bg-green-600 px-3 rounded hover:bg-green-700\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"PK3hIrroaVEXd6tZ16WjNH4Fs9c=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["useEffect","useState","db","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","ChatBox","songId","_s","message","setMessage","comments","setComments","q","unsubscribe","snapshot","docs","map","doc","id","data","sendComment","trim","displayName","localStorage","getItem","text","user","timestamp","className","children","fileName","_jsxFileName","lineNumber","columnNumber","c","i","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/music-player-app-fixed-working/src/components/ChatBox.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport {\n  collection,\n  addDoc,\n  query,\n  orderBy,\n  onSnapshot,\n  serverTimestamp\n} from 'firebase/firestore';\n\nconst ChatBox = ({ songId }) => {\n  const [message, setMessage] = useState('');\n  const [comments, setComments] = useState([]);\n\n  useEffect(() => {\n    if (!songId) return;\n\n    const q = query(\n      collection(db, 'comments', songId, 'messages'),\n      orderBy('timestamp', 'asc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      setComments(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n    });\n\n    return () => unsubscribe();\n  }, [songId]);\n\n  const sendComment = async () => {\n    if (!message.trim()) return;\n  \n    const displayName = localStorage.getItem(\"spotify_display_name\") || \"Anonymous\";\n  \n    await addDoc(collection(db, 'comments', songId, 'messages'), {\n      text: message,\n      user: displayName,\n      timestamp: serverTimestamp()\n    });\n  \n    setMessage('');\n  };\n\n  return (\n    <div className=\"bg-gray-800 text-white p-4 rounded mt-4 max-h-60 overflow-y-auto\">\n      <h3 className=\"text-lg font-semibold mb-2\">ðŸ’¬ Chat for this Song</h3>\n      <div className=\"space-y-1 text-sm mb-3\">\n        {comments.map((c, i) => (\n          <div key={i} className=\"bg-gray-700 px-2 py-1 rounded\">{c.text}</div>\n        ))}\n      </div>\n      <div className=\"flex gap-2\">\n        <input\n          className=\"flex-grow p-2 rounded bg-gray-900 text-white\"\n          placeholder=\"Write a comment...\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button\n          onClick={sendComment}\n          className=\"bg-green-600 px-3 rounded hover:bg-green-700\"\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}