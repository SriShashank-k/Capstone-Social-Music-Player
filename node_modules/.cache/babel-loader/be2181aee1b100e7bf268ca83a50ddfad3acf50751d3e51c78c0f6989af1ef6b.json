{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/music-player-app-fixed-working/src/components/Library.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUserPlaylists } from '../utils/spotify';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Library = ({\n  token\n}) => {\n  _s();\n  const [playlists, setPlaylists] = useState([]);\n  useEffect(() => {\n    getUserPlaylists(token).then(res => setPlaylists(res.data.items));\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Your Playlists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\",\n      children: playlists.map(playlist => {\n        var _playlist$images$;\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: `/playlist/${playlist.id}`,\n          className: \"bg-gray-700 hover:bg-gray-600 p-4 rounded shadow-md transition\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: (_playlist$images$ = playlist.images[0]) === null || _playlist$images$ === void 0 ? void 0 : _playlist$images$.url,\n            alt: \"cover\",\n            className: \"w-full h-40 object-cover rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-lg mt-2 font-semibold\",\n            children: playlist.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-300\",\n            children: [playlist.tracks.total, \" songs\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this)]\n        }, playlist.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(Library, \"/7UASZ0pXGZcrJioajU839hHwfM=\");\n_c = Library;\nexport default Library;\nvar _c;\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"names":["React","useEffect","useState","getUserPlaylists","Link","jsxDEV","_jsxDEV","Library","token","_s","playlists","setPlaylists","then","res","data","items","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","playlist","_playlist$images$","to","id","src","images","url","alt","name","tracks","total","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/music-player-app-fixed-working/src/components/Library.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getUserPlaylists } from '../utils/spotify';\nimport { Link } from 'react-router-dom';\n\nconst Library = ({ token }) => {\n  const [playlists, setPlaylists] = useState([]);\n\n  useEffect(() => {\n    getUserPlaylists(token).then(res => setPlaylists(res.data.items));\n  }, [token]);\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-3xl font-bold mb-6\">Your Playlists</h2>\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6\">\n        {playlists.map((playlist) => (\n          <Link to={`/playlist/${playlist.id}`} key={playlist.id} className=\"bg-gray-700 hover:bg-gray-600 p-4 rounded shadow-md transition\">\n            <img src={playlist.images[0]?.url} alt=\"cover\" className=\"w-full h-40 object-cover rounded\" />\n            <h3 className=\"text-lg mt-2 font-semibold\">{playlist.name}</h3>\n            <p className=\"text-sm text-gray-300\">{playlist.tracks.total} songs</p>\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,SAASC,IAAI,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,OAAO,GAAGA,CAAC;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACdE,gBAAgB,CAACK,KAAK,CAAC,CAACI,IAAI,CAACC,GAAG,IAAIF,YAAY,CAACE,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,oBACEF,OAAA;IAAKU,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBX,OAAA;MAAIU,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3Df,OAAA;MAAKU,SAAS,EAAC,qEAAqE;MAAAC,QAAA,EACjFP,SAAS,CAACY,GAAG,CAAEC,QAAQ;QAAA,IAAAC,iBAAA;QAAA,oBACtBlB,OAAA,CAACF,IAAI;UAACqB,EAAE,EAAE,aAAaF,QAAQ,CAACG,EAAE,EAAG;UAAmBV,SAAS,EAAC,gEAAgE;UAAAC,QAAA,gBAChIX,OAAA;YAAKqB,GAAG,GAAAH,iBAAA,GAAED,QAAQ,CAACK,MAAM,CAAC,CAAC,CAAC,cAAAJ,iBAAA,uBAAlBA,iBAAA,CAAoBK,GAAI;YAACC,GAAG,EAAC,OAAO;YAACd,SAAS,EAAC;UAAkC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9Ff,OAAA;YAAIU,SAAS,EAAC,4BAA4B;YAAAC,QAAA,EAAEM,QAAQ,CAACQ;UAAI;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/Df,OAAA;YAAGU,SAAS,EAAC,uBAAuB;YAAAC,QAAA,GAAEM,QAAQ,CAACS,MAAM,CAACC,KAAK,EAAC,QAAM;UAAA;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC;QAAA,GAH7BE,QAAQ,CAACG,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIhD,CAAC;MAAA,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CArBIF,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AAuBb,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}