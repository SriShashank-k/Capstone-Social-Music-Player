{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/music-player-app-fixed-working/src/components/BackgroundScene.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BackgroundScene = () => {\n  _s();\n  const mountRef = useRef();\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // ðŸŽµ Speaker (Cylinder)\n    const speakerGeometry = new THREE.CylinderGeometry(1, 1, 2, 32);\n    const speakerMaterial = new THREE.MeshBasicMaterial({\n      color: 0xff5555\n    });\n    const speaker = new THREE.Mesh(speakerGeometry, speakerMaterial);\n    scene.add(speaker);\n\n    // ðŸŽ¶ Soundwave Rings\n    const rings = [];\n    const ringMaterial = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n      side: THREE.DoubleSide,\n      transparent: true,\n      opacity: 0.4\n    });\n    for (let i = 0; i < 5; i++) {\n      const ringGeometry = new THREE.RingGeometry(1.2, 1.4, 64);\n      const ring = new THREE.Mesh(ringGeometry, ringMaterial);\n      ring.rotation.x = Math.PI / 2;\n      ring.scale.set(1 + i * 0.2, 1 + i * 0.2, 1);\n      scene.add(ring);\n      rings.push(ring);\n    }\n\n    // Animate Rings\n    const clock = new THREE.Clock();\n    const animate = () => {\n      requestAnimationFrame(animate);\n      const elapsed = clock.getElapsedTime();\n      rings.forEach((ring, idx) => {\n        const scale = 1 + (elapsed * 0.5 + idx * 0.3) % 3;\n        ring.scale.set(scale, scale, scale);\n        ring.material.opacity = 1 - scale / 3;\n      });\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      renderer.dispose();\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    className: \"absolute inset-0 z-0\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n};\n_s(BackgroundScene, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = BackgroundScene;\nexport default BackgroundScene;\nvar _c;\n$RefreshReg$(_c, \"BackgroundScene\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","BackgroundScene","_s","mountRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","z","renderer","WebGLRenderer","alpha","setSize","current","appendChild","domElement","speakerGeometry","CylinderGeometry","speakerMaterial","MeshBasicMaterial","color","speaker","Mesh","add","rings","ringMaterial","side","DoubleSide","transparent","opacity","i","ringGeometry","RingGeometry","ring","rotation","x","Math","PI","scale","set","push","clock","Clock","animate","requestAnimationFrame","elapsed","getElapsedTime","forEach","idx","material","render","dispose","removeChild","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/music-player-app-fixed-working/src/components/BackgroundScene.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst BackgroundScene = () => {\n  const mountRef = useRef();\n\n  useEffect(() => {\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    camera.position.z = 5;\n\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // ðŸŽµ Speaker (Cylinder)\n    const speakerGeometry = new THREE.CylinderGeometry(1, 1, 2, 32);\n    const speakerMaterial = new THREE.MeshBasicMaterial({ color: 0xff5555 });\n    const speaker = new THREE.Mesh(speakerGeometry, speakerMaterial);\n    scene.add(speaker);\n\n    // ðŸŽ¶ Soundwave Rings\n    const rings = [];\n    const ringMaterial = new THREE.MeshBasicMaterial({\n      color: 0xffffff,\n      side: THREE.DoubleSide,\n      transparent: true,\n      opacity: 0.4\n    });\n\n    for (let i = 0; i < 5; i++) {\n      const ringGeometry = new THREE.RingGeometry(1.2, 1.4, 64);\n      const ring = new THREE.Mesh(ringGeometry, ringMaterial);\n      ring.rotation.x = Math.PI / 2;\n      ring.scale.set(1 + i * 0.2, 1 + i * 0.2, 1);\n      scene.add(ring);\n      rings.push(ring);\n    }\n\n    // Animate Rings\n    const clock = new THREE.Clock();\n\n    const animate = () => {\n      requestAnimationFrame(animate);\n\n      const elapsed = clock.getElapsedTime();\n\n      rings.forEach((ring, idx) => {\n        const scale = 1 + (elapsed * 0.5 + idx * 0.3) % 3;\n        ring.scale.set(scale, scale, scale);\n        ring.material.opacity = 1 - (scale / 3);\n      });\n\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      renderer.dispose();\n      mountRef.current.removeChild(renderer.domElement);\n    };\n  }, []);\n\n  return <div ref={mountRef} className=\"absolute inset-0 z-0\" />;\n};\n\nexport default BackgroundScene;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}