{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/music-player-app-fixed-working/src/pages/PlaylistDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getTracksByPlaylistId } from '../utils/spotify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PlaylistDetails = ({\n  token,\n  setCurrentTrack\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [tracks, setTracks] = useState([]);\n  useEffect(() => {\n    getTracksByPlaylistId(token, id).then(res => setTracks(res.data.items));\n  }, [token, id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold mb-6\",\n      children: \"Playlist Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: tracks.map(({\n        track\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between bg-gray-700 p-3 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), track.preview_url ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCurrentTrack(track),\n          className: \"text-green-400\",\n          children: \"Play\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-gray-400 text-sm\",\n          children: \"No preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)]\n      }, track.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(PlaylistDetails, \"NI/FHZnBfN7aKGNTJ1EFqZT4das=\", false, function () {\n  return [useParams];\n});\n_c = PlaylistDetails;\nexport default PlaylistDetails;\nvar _c;\n$RefreshReg$(_c, \"PlaylistDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","getTracksByPlaylistId","jsxDEV","_jsxDEV","PlaylistDetails","token","setCurrentTrack","_s","id","tracks","setTracks","then","res","data","items","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","track","name","preview_url","onClick","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/music-player-app-fixed-working/src/pages/PlaylistDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getTracksByPlaylistId } from '../utils/spotify';\n\nconst PlaylistDetails = ({ token, setCurrentTrack }) => {\n  const { id } = useParams();\n  const [tracks, setTracks] = useState([]);\n\n  useEffect(() => {\n    getTracksByPlaylistId(token, id).then(res => setTracks(res.data.items));\n  }, [token, id]);\n\n  return (\n    <div className=\"p-6\">\n      <h2 className=\"text-3xl font-bold mb-6\">Playlist Tracks</h2>\n      <div className=\"space-y-2\">\n        {tracks.map(({ track }) => (\n          <div key={track.id} className=\"flex justify-between bg-gray-700 p-3 rounded\">\n            <span>{track.name}</span>\n            {track.preview_url ? (\n              <button onClick={() => setCurrentTrack(track)} className=\"text-green-400\">Play</button>\n            ) : (\n              <span className=\"text-gray-400 text-sm\">No preview</span>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default PlaylistDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,qBAAqB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,eAAe,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM;IAAEC;EAAG,CAAC,GAAGR,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACdG,qBAAqB,CAACI,KAAK,EAAEG,EAAE,CAAC,CAACG,IAAI,CAACC,GAAG,IAAIF,SAAS,CAACE,GAAG,CAACC,IAAI,CAACC,KAAK,CAAC,CAAC;EACzE,CAAC,EAAE,CAACT,KAAK,EAAEG,EAAE,CAAC,CAAC;EAEf,oBACEL,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAIY,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5DjB,OAAA;MAAKY,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBP,MAAM,CAACY,GAAG,CAAC,CAAC;QAAEC;MAAM,CAAC,kBACpBnB,OAAA;QAAoBY,SAAS,EAAC,8CAA8C;QAAAC,QAAA,gBAC1Eb,OAAA;UAAAa,QAAA,EAAOM,KAAK,CAACC;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EACxBE,KAAK,CAACE,WAAW,gBAChBrB,OAAA;UAAQsB,OAAO,EAAEA,CAAA,KAAMnB,eAAe,CAACgB,KAAK,CAAE;UAACP,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,gBAEvFjB,OAAA;UAAMY,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CACzD;MAAA,GANOE,KAAK,CAACd,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOb,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACb,EAAA,CAzBIH,eAAe;EAAA,QACJJ,SAAS;AAAA;AAAA0B,EAAA,GADpBtB,eAAe;AA2BrB,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}