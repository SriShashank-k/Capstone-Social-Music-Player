{"ast":null,"code":"var _jsxFileName = \"/Users/shashank/Downloads/music-player-app-fixed-working/src/components/ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp, doc, updateDoc } from 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emojis = ['🔥', '😢', '😡', '😲', '❤️'];\nconst ChatBox = ({\n  songId,\n  currentUserName\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [replyingTo, setReplyingTo] = useState(null);\n  useEffect(() => {\n    if (!songId) return;\n    const q = query(collection(db, 'comments', songId, 'messages'), orderBy('timestamp', 'asc'));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      const msgs = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n\n      // Group top-level messages and replies\n      const grouped = msgs.reduce((acc, msg) => {\n        if (!msg.parentMessageId) {\n          acc.push({\n            ...msg,\n            replies: []\n          });\n        } else {\n          const parent = acc.find(m => m.id === msg.parentMessageId);\n          if (parent) {\n            parent.replies.push(msg);\n          }\n        }\n        return acc;\n      }, []);\n      setMessages(grouped);\n    });\n    return () => unsubscribe();\n  }, [songId]);\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n    await addDoc(collection(db, 'comments', songId, 'messages'), {\n      text: message,\n      user: currentUserName,\n      timestamp: serverTimestamp(),\n      parentMessageId: replyingTo ? replyingTo.id : null,\n      reactions: {} // Initialize reactions\n    });\n    setMessage('');\n    setReplyingTo(null);\n  };\n  const toggleReaction = async (messageId, emoji) => {\n    const msgRef = doc(db, 'comments', songId, 'messages', messageId);\n    const messageSnapshot = await msgRef.get();\n    const data = messageSnapshot.data();\n    const currentReactions = data.reactions || {};\n    const userList = currentReactions[emoji] || [];\n    const updatedList = userList.includes(currentUserName) ? userList.filter(user => user !== currentUserName) : [...userList, currentUserName];\n    await updateDoc(msgRef, {\n      [`reactions.${emoji}`]: updatedList\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-gray-800 text-white p-4 rounded mt-4 max-h-60 overflow-y-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold mb-2\",\n      children: \"\\uD83D\\uDCAC Chat for this Song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), messages.map(msg => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-700 p-2 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: msg.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 mt-2\",\n          children: emojis.map(emoji => {\n            var _msg$reactions, _msg$reactions$emoji, _msg$reactions2, _msg$reactions2$emoji;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleReaction(msg.id, emoji),\n              className: `text-xl ${(_msg$reactions = msg.reactions) !== null && _msg$reactions !== void 0 && (_msg$reactions$emoji = _msg$reactions[emoji]) !== null && _msg$reactions$emoji !== void 0 && _msg$reactions$emoji.includes(currentUserName) ? 'opacity-100' : 'opacity-50'}`,\n              children: [emoji, \" \", ((_msg$reactions2 = msg.reactions) === null || _msg$reactions2 === void 0 ? void 0 : (_msg$reactions2$emoji = _msg$reactions2[emoji]) === null || _msg$reactions2$emoji === void 0 ? void 0 : _msg$reactions2$emoji.length) || 0]\n            }, emoji, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"text-sm text-green-400 mt-1\",\n          onClick: () => {\n            setReplyingTo(msg);\n            setMessage(`@${msg.user} `);\n          },\n          children: \"Reply\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), msg.replies.map(reply => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-6 mt-1 bg-gray-600 p-2 rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-semibold\",\n          children: reply.user\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: reply.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-2 mt-2\",\n          children: emojis.map(emoji => {\n            var _reply$reactions, _reply$reactions$emoj, _reply$reactions2, _reply$reactions2$emo;\n            return /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => toggleReaction(reply.id, emoji),\n              className: `text-xl ${(_reply$reactions = reply.reactions) !== null && _reply$reactions !== void 0 && (_reply$reactions$emoj = _reply$reactions[emoji]) !== null && _reply$reactions$emoj !== void 0 && _reply$reactions$emoj.includes(currentUserName) ? 'opacity-100' : 'opacity-50'}`,\n              children: [emoji, \" \", ((_reply$reactions2 = reply.reactions) === null || _reply$reactions2 === void 0 ? void 0 : (_reply$reactions2$emo = _reply$reactions2[emoji]) === null || _reply$reactions2$emo === void 0 ? void 0 : _reply$reactions2$emo.length) || 0]\n            }, emoji, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, reply.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this))]\n    }, msg.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex gap-2 mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-grow p-2 rounded bg-gray-900 text-white\",\n        placeholder: replyingTo ? `Replying to ${replyingTo.user}` : 'Write a comment...',\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"bg-green-600 px-3 rounded hover:bg-green-700\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), replyingTo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-sm mt-1 text-gray-300\",\n      children: [\"Replying to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: replyingTo.user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }, this), ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setReplyingTo(null),\n        className: \"text-red-400 ml-2\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"wmXGzr5SSFaXnqwVLsVgfMZae3o=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["useEffect","useState","db","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","doc","updateDoc","jsxDEV","_jsxDEV","emojis","ChatBox","songId","currentUserName","_s","message","setMessage","messages","setMessages","replyingTo","setReplyingTo","q","unsubscribe","snapshot","msgs","docs","map","id","data","grouped","reduce","acc","msg","parentMessageId","push","replies","parent","find","m","sendMessage","trim","text","user","timestamp","reactions","toggleReaction","messageId","emoji","msgRef","messageSnapshot","get","currentReactions","userList","updatedList","includes","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_msg$reactions","_msg$reactions$emoji","_msg$reactions2","_msg$reactions2$emoji","onClick","length","reply","_reply$reactions","_reply$reactions$emoj","_reply$reactions2","_reply$reactions2$emo","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/shashank/Downloads/music-player-app-fixed-working/src/components/ChatBox.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { db } from '../firebase';\nimport {\n  collection,\n  addDoc,\n  query,\n  orderBy,\n  onSnapshot,\n  serverTimestamp,\n  doc,\n  updateDoc\n} from 'firebase/firestore';\n\nconst emojis = ['🔥', '😢', '😡', '😲', '❤️'];\n\nconst ChatBox = ({ songId, currentUserName }) => {\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [replyingTo, setReplyingTo] = useState(null);\n\n  useEffect(() => {\n    if (!songId) return;\n\n    const q = query(\n      collection(db, 'comments', songId, 'messages'),\n      orderBy('timestamp', 'asc')\n    );\n\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const msgs = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      }));\n\n      // Group top-level messages and replies\n      const grouped = msgs.reduce((acc, msg) => {\n        if (!msg.parentMessageId) {\n          acc.push({ ...msg, replies: [] });\n        } else {\n          const parent = acc.find(m => m.id === msg.parentMessageId);\n          if (parent) {\n            parent.replies.push(msg);\n          }\n        }\n        return acc;\n      }, []);\n\n      setMessages(grouped);\n    });\n\n    return () => unsubscribe();\n  }, [songId]);\n\n  const sendMessage = async () => {\n    if (!message.trim()) return;\n\n    await addDoc(collection(db, 'comments', songId, 'messages'), {\n      text: message,\n      user: currentUserName,\n      timestamp: serverTimestamp(),\n      parentMessageId: replyingTo ? replyingTo.id : null,\n      reactions: {}  // Initialize reactions\n    });\n\n    setMessage('');\n    setReplyingTo(null);\n  };\n\n  const toggleReaction = async (messageId, emoji) => {\n    const msgRef = doc(db, 'comments', songId, 'messages', messageId);\n\n    const messageSnapshot = await msgRef.get();\n    const data = messageSnapshot.data();\n    const currentReactions = data.reactions || {};\n\n    const userList = currentReactions[emoji] || [];\n    const updatedList = userList.includes(currentUserName)\n      ? userList.filter(user => user !== currentUserName)\n      : [...userList, currentUserName];\n\n    await updateDoc(msgRef, {\n      [`reactions.${emoji}`]: updatedList\n    });\n  };\n\n  return (\n    <div className=\"bg-gray-800 text-white p-4 rounded mt-4 max-h-60 overflow-y-auto\">\n      <h3 className=\"text-lg font-semibold mb-2\">💬 Chat for this Song</h3>\n\n      {messages.map((msg) => (\n        <div key={msg.id} className=\"mb-3\">\n          <div className=\"bg-gray-700 p-2 rounded\">\n            <span className=\"font-semibold\">{msg.user}</span>\n            <div>{msg.text}</div>\n\n            {/* Emoji Reactions */}\n            <div className=\"flex gap-2 mt-2\">\n              {emojis.map((emoji) => (\n                <button\n                  key={emoji}\n                  onClick={() => toggleReaction(msg.id, emoji)}\n                  className={`text-xl ${\n                    msg.reactions?.[emoji]?.includes(currentUserName)\n                      ? 'opacity-100'\n                      : 'opacity-50'\n                  }`}\n                >\n                  {emoji} {msg.reactions?.[emoji]?.length || 0}\n                </button>\n              ))}\n            </div>\n\n            <button\n              className=\"text-sm text-green-400 mt-1\"\n              onClick={() => {\n                setReplyingTo(msg);\n                setMessage(`@${msg.user} `);\n              }}\n            >\n              Reply\n            </button>\n          </div>\n\n          {/* Replies */}\n          {msg.replies.map((reply) => (\n            <div key={reply.id} className=\"ml-6 mt-1 bg-gray-600 p-2 rounded\">\n              <span className=\"font-semibold\">{reply.user}</span>\n              <div>{reply.text}</div>\n              {/* Emoji reactions for replies */}\n              <div className=\"flex gap-2 mt-2\">\n                {emojis.map((emoji) => (\n                  <button\n                    key={emoji}\n                    onClick={() => toggleReaction(reply.id, emoji)}\n                    className={`text-xl ${\n                      reply.reactions?.[emoji]?.includes(currentUserName)\n                        ? 'opacity-100'\n                        : 'opacity-50'\n                    }`}\n                  >\n                    {emoji} {reply.reactions?.[emoji]?.length || 0}\n                  </button>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      ))}\n\n      {/* Input */}\n      <div className=\"flex gap-2 mt-2\">\n        <input\n          className=\"flex-grow p-2 rounded bg-gray-900 text-white\"\n          placeholder={\n            replyingTo ? `Replying to ${replyingTo.user}` : 'Write a comment...'\n          }\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button\n          onClick={sendMessage}\n          className=\"bg-green-600 px-3 rounded hover:bg-green-700\"\n        >\n          Send\n        </button>\n      </div>\n\n      {/* Cancel reply */}\n      {replyingTo && (\n        <div className=\"text-sm mt-1 text-gray-300\">\n          Replying to <strong>{replyingTo.user}</strong>{' '}\n          <button onClick={() => setReplyingTo(null)} className=\"text-red-400 ml-2\">\n            Cancel\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatBox;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}